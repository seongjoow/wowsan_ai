syntax = "proto3";

package embeddingservice;

option go_package = ".;embeddingservice";

service EmbeddingService {
    rpc CallModel (CallModelRequest) returns (CallModelResponse) {}
    rpc SendProssessLog (SendProssessLogRequest) returns (SendProssessLogResponse) {}
}

message Tensor {
    repeated float values = 1;
    repeated int32 shape = 2;
  }

message CallModelRequest {
    string broker_address = 1;
}

message CallModelResponse {
    Tensor tensor = 1;
}

message TickLog {
    float Cpu = 1;
    float Memory = 2;
    float QueueLength = 3;
    float QueueTime = 4;
    float ServiceTime = 5;
    float ResponseTime = 6;
    float InterArrivalTime = 7;
    float Throughput = 8;
    string Time = 9;
}

message HopLog {
    string Node = 1;
    repeated PerformanceInfo PerformanceInfo = 2;
    string Level = 3;
    string Msg = 4;
    string Time = 5;
}

message PerformanceInfo {
    string BrokerId = 1;
    float Cpu = 2;
    int64 Memory = 3;
    int32 QueueLength = 4;
    double QueueTime = 5;
    double ServiceTime = 6;
    double ResponseTime = 7;
    double InterArrivalTime = 8;
    double Throughput = 9;
    string Timestamp = 10;
    string Time = 11;
}

message SendProssessLogRequest {
    string broker_address = 1;
    string type = 2;
    HopLog HopLog = 3;
    TickLog TickLog = 4;
}

message SendProssessLogResponse {
}

